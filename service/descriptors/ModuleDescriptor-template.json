{
  "id": "mod-workflow-${project.version}",
  "name": "Workflow Module",
  "provides": [
    {
      "id": "actions",
      "version": "1.0",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/actions",
          "permissionsRequired": ["workflow.action.collection.get"],
          "permissionsDesired": ["workflow.action.domain.*", "workflow.action.domain.all"]
        }
      ]
    },
    {
      "id": "events",
      "version": "1.0",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/events/*",
          "permissionsRequired": ["workflow.event.collection.get"],
          "permissionsDesired": ["workflow.event.domain.*", "workflow.event.domain.all"]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/events/*",
          "permissionsRequired": ["workflow.event.collection.post"],
          "permissionsDesired": ["workflow.event.domain.*", "workflow.event.domain.all"]
        }
      ]
    },
    {
      "id": "triggers",
      "version": "1.0",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/triggers",
          "permissionsRequired": ["workflow.trigger.collection.get"],
          "permissionsDesired": ["workflow.trigger.domain.*", "workflow.trigger.domain.all"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/triggers/{id}",
          "permissionsRequired": ["workflow.trigger.item.get"],
          "permissionsDesired": ["workflow.trigger.domain.*", "workflow.trigger.domain.all"]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/triggers",
          "permissionsRequired": ["workflow.trigger.item.post"],
          "permissionsDesired": ["workflow.trigger.domain.*", "workflow.trigger.domain.all"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/triggers/{id}",
          "permissionsRequired": ["workflow.trigger.item.put"],
          "permissionsDesired": ["workflow.trigger.domain.*", "workflow.trigger.domain.all"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/triggers/{id}",
          "permissionsRequired": ["workflow.trigger.item.delete"],
          "permissionsDesired": ["workflow.trigger.domain.*", "workflow.trigger.domain.all"]
        }
      ]
    },
    {
      "id": "tasks",
      "version": "1.0",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/tasks",
          "permissionsRequired": ["workflow.task.collection.get"],
          "permissionsDesired": ["workflow.task.domain.*", "workflow.task.domain.all"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/tasks/{id}",
          "permissionsRequired": ["workflow.task.item.get"],
          "permissionsDesired": ["workflow.task.domain.*", "workflow.task.domain.all"]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/tasks",
          "permissionsRequired": ["workflow.task.item.post"],
          "permissionsDesired": ["workflow.task.domain.*", "workflow.task.domain.all"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/tasks/{id}",
          "permissionsRequired": ["workflow.task.item.put"],
          "permissionsDesired": ["workflow.task.domain.*", "workflow.task.domain.all"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/tasks/{id}",
          "permissionsRequired": ["workflow.task.item.delete"],
          "permissionsDesired": ["workflow.task.domain.*", "workflow.task.domain.all"]
        }
      ]
    },
    {
      "id": "workflows",
      "version": "1.0",
      "handlers": [
        {
          "methods": ["GET"],
          "pathPattern": "/workflows",
          "permissionsRequired": ["workflow.workflow.collection.get"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.domain.all"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/workflows/{id}",
          "permissionsRequired": ["workflow.workflow.item.get"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.workflow.domain.all"]
        },
        {
          "methods": ["POST"],
          "pathPattern": "/workflows",
          "permissionsRequired": ["workflow.workflow.item.post"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.workflow.domain.all"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/workflows/{id}",
          "permissionsRequired": ["workflow.workflow.item.put"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.workflow.domain.all"]
        },
        {
          "methods": ["PATCH"],
          "pathPattern": "/workflows/{id}",
          "permissionsRequired": ["workflow.workflow.item.patch"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.workflow.domain.all"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/workflows/{id}",
          "permissionsRequired": ["workflow.workflow.item.delete"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.workflow.domain.all"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/workflows/{id}/startTrigger",
          "permissionsRequired": ["workflow.workflow.item.startTrigger"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.workflow.domain.all"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/workflows/{id}/startTrigger",
          "permissionsRequired": ["workflow.workflow.item.startTrigger"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.workflow.domain.all"]
        },
        {
          "methods": ["DELETE"],
          "pathPattern": "/workflows/{id}/startTrigger",
          "permissionsRequired": ["workflow.workflow.item.startTrigger"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.workflow.domain.all"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/workflows/{id}/activate",
          "permissionsRequired": ["workflow.workflow.item.activate"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.workflow.domain.all"]
        },
        {
          "methods": ["PUT"],
          "pathPattern": "/workflows/{id}/deactivate",
          "permissionsRequired": ["workflow.workflow.item.deactivate"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.workflow.domain.all"]
        },
        {
          "methods": ["GET"],
          "pathPattern": "/workflows/{id}/tasks",
          "permissionsRequired": ["workflow.workflow.item.tasks"],
          "permissionsDesired": ["workflow.workflow.domain.*", "workflow.workflow.domain.all"]
        }
      ]
    },
    {
      "id": "_jsonSchemas",
      "version": "1.0",
      "interfaceType" : "multiple",
      "handlers" : [
        {
          "methods" : [ "GET" ],
          "pathPattern" : "/_/jsonSchemas"
        }
      ]
    },
    {
      "id": "_ramls",
      "version": "1.0",
      "interfaceType" : "multiple",
      "handlers" : [
        {
          "methods" : [ "GET" ],
          "pathPattern" : "/_/ramls"
        }
      ]
    },
    {
      "id": "_tenant",
      "version": "1.0",
      "interfaceType" : "system",
      "handlers" : [
        {
          "methods" : [ "POST", "DELETE" ],
          "pathPattern" : "/_/tenant"
        }
      ]
    }
  ],
  "permissionSets" : [
    {
      "permissionName": "workflow.action.collection.get",
      "displayName": "Action - get action collection",
      "description": "Get action collection"
    },
    {
      "permissionName": "workflow.action.allops",
      "displayName": "Action module - all CRUD permissions",
      "description": "Entire set of permissions needed to use the action modules, but no domain permissions",
      "subPermissions": [
        "workflow.action.collection.get"
      ],
      "visible": false
    },
    {
      "permissionName": "workflow.action.all",
      "displayName": "Action module - all permissions and all action domains",
      "description": "Entire set of permissions needed to use the action modules on any action domain",
      "subPermissions": [
        "workflow.action.allops",
        "workflow.action.domain.all"
      ],
      "visible": false
    },
    {
      "permissionName": "workflow.event.collection.get",
      "displayName": "Event - emit event",
      "description": "Emit event"
    },
    {
      "permissionName": "workflow.event.collection.post",
      "displayName": "Event - emit event",
      "description": "Emit event"
    },
    {
      "permissionName": "workflow.event.allops",
      "displayName": "Event module - all CRUD permissions",
      "description": "Entire set of permissions needed to use the event modules, but no domain permissions",
      "subPermissions": [
        "workflow.event.collection.get"
      ],
      "visible": false
    },
    {
      "permissionName": "workflow.event.all",
      "displayName": "Event module - all permissions and all event domains",
      "description": "Entire set of permissions needed to use the event modules on any event domain",
      "subPermissions": [
        "workflow.event.allops",
        "workflow.event.domain.all"
      ],
      "visible": false
    },
    {
      "permissionName": "workflow.trigger.collection.get",
      "displayName": "Trigger - get trigger collection",
      "description": "Get trigger collection"
    },
    {
      "permissionName": "workflow.trigger.item.get",
      "displayName": "Trigger - get trigger item",
      "description": "Get trigger item"
    },
    {
      "permissionName": "workflow.trigger.item.post",
      "displayName": "Trigger - post trigger item",
      "description": "Create trigger item"
    },
    {
      "permissionName": "workflow.trigger.item.put",
      "displayName": "Trigger - put trigger item",
      "description": "Update trigger item"
    },
    {
      "permissionName": "workflow.trigger.item.delete",
      "displayName": "Trigger - delete trigger item",
      "description": "Delete trigger item"
    },
    {
      "permissionName": "workflow.trigger.allops",
      "displayName": "Trigger module - all CRUD permissions",
      "description": "Entire set of permissions needed to use the trigger modules, but no domain permissions",
      "subPermissions": [
        "workflow.trigger.collection.get",
        "workflow.trigger.item.get",
        "workflow.trigger.item.post",
        "workflow.trigger.item.put",
        "workflow.trigger.item.delete"
      ],
      "visible": false
    },
    {
      "permissionName": "workflow.trigger.all",
      "displayName": "Trigger module - all permissions and all trigger domains",
      "description": "Entire set of permissions needed to use the trigger modules on any trigger domain",
      "subPermissions": [
        "workflow.trigger.allops",
        "workflow.trigger.domain.all"
      ],
      "visible": false
    },
    {
      "permissionName": "workflow.task.collection.get",
      "displayName": "Task - get task collection",
      "description": "Get task collection"
    },
    {
      "permissionName": "workflow.task.item.get",
      "displayName": "Task - get task item",
      "description": "Get task item"
    },
    {
      "permissionName": "workflow.task.item.post",
      "displayName": "Task - post task item",
      "description": "Create task item"
    },
    {
      "permissionName": "workflow.task.item.put",
      "displayName": "Task - put task item",
      "description": "Update task item"
    },
    {
      "permissionName": "workflow.task.item.delete",
      "displayName": "Task - delete task item",
      "description": "Delete task item"
    },
    {
      "permissionName": "workflow.task.allops",
      "displayName": "Task module - all CRUD permissions",
      "description": "Entire set of permissions needed to use the task modules, but no domain permissions",
      "subPermissions": [
        "workflow.task.collection.get",
        "workflow.task.item.get",
        "workflow.task.item.post",
        "workflow.task.item.put",
        "workflow.task.item.delete"
      ],
      "visible": false
    },
    {
      "permissionName": "workflow.task.all",
      "displayName": "Task module - all permissions and all task domains",
      "description": "Entire set of permissions needed to use the task modules on any task domain",
      "subPermissions": [
        "workflow.task.allops",
        "workflow.task.domain.all"
      ],
      "visible": false
    },
    {
      "permissionName": "workflow.workflow.collection.get",
      "displayName": "Workflow - get workflow collection",
      "description": "Get workflow collection"
    },
    {
      "permissionName": "workflow.workflow.item.get",
      "displayName": "Workflow - get workflow item",
      "description": "Get workflow item"
    },
    {
      "permissionName": "workflow.workflow.item.post",
      "displayName": "Workflow - post workflow item",
      "description": "Create workflow item"
    },
    {
      "permissionName": "workflow.workflow.item.put",
      "displayName": "Workflow - put workflow item",
      "description": "Update workflow item"
    },
    {
      "permissionName": "workflow.workflow.item.patch",
      "displayName": "Workflow - patch workflow item",
      "description": "Patch workflow item"
    },
    {
      "permissionName": "workflow.workflow.item.delete",
      "displayName": "Workflow - delete workflow item",
      "description": "Delete workflow item"
    },
    {
      "permissionName": "workflow.workflow.item.startTrigger",
      "displayName": "Workflow - add/remove start trigger on workflow item",
      "description": "Add/remove start trigger on workflow item"
    },
    {
      "permissionName": "workflow.workflow.item.activate",
      "displayName": "Workflow - activate workflow item",
      "description": "Activate workflow item"
    },
    {
      "permissionName": "workflow.workflow.item.deactivate",
      "displayName": "Workflow - deactivate workflow item",
      "description": "Dactivate workflow item"
    },
    {
      "permissionName": "workflow.workflow.item.tasks",
      "displayName": "Workflow - workflow item tasks",
      "description": "Get workflow item tasks"
    },
    {
      "permissionName": "workflow.workflow.allops",
      "displayName": "Workflow module - all CRUD permissions",
      "description": "Entire set of permissions needed to use the workflow modules, but no domain permissions",
      "subPermissions": [
        "workflow.workflow.collection.get",
        "workflow.workflow.item.get",
        "workflow.workflow.item.post",
        "workflow.workflow.item.put",
        "workflow.workflow.item.patch",
        "workflow.workflow.item.delete",
        "workflow.workflow.item.startTrigger",
        "workflow.workflow.item.activate",
        "workflow.workflow.item.deactivate",
        "workflow.workflow.item.tasks"
      ],
      "visible": false
    },
    {
      "permissionName": "workflow.workflow.all",
      "displayName": "Workflow module - all permissions and all workflow domains",
      "description": "Entire set of permissions needed to use the workflow modules on any workflow domain",
      "subPermissions": [
        "workflow.workflow.allops",
        "workflow.workflow.domain.all"
      ],
      "visible": false
    }
  ],
  "requires": [ ],
  "launchDescriptor": {
    "dockerImage": "mod-workflow:${project.version}",
    "dockerPull" : false,
    "dockerArgs": {
      "HostConfig": {
        "Memory": 402653184,
        "PortBindings": { "8081/tcp": [ { "HostPort": "%p" } ] }
      }
    },
    "env": [
      {
        "name": "JAVA_OPTIONS",
        "value": "-XX:MaxRAMPercentage=66.0"
      },
      { "name": "DB_HOST", "value": "postgres" },
      { "name": "DB_PORT", "value": "5432" },
      { "name": "DB_USERNAME", "value": "folio_admin" },
      { "name": "DB_PASSWORD", "value": "folio_admin" },
      { "name": "DB_DATABASE", "value": "okapi_modules" },
      { "name": "DB_QUERYTIMEOUT", "value": "60000" },
      { "name": "DB_CHARSET", "value": "UTF-8" },
      { "name": "DB_MAXPOOLSIZE", "value": "16" },
      { "name": "OKAPI_URL", "value": "http://10.0.2.15:9130", "description": "The URL to the OKAPI service." }
    ]
  }
}
