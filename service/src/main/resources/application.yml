logging:
  file: logs/mod-workflow.log
  level:
    com:
      zaxxer:
        hikari: INFO
    org:
      folio: INFO
      hibernate: INFO
      springframework: INFO

server:
  servlet:
    context-path: /mod-workflow
  port: 9001

spring:
  activemq.broker-url: tcp://localhost:61616
  application.name: mod-workflow
  data.rest:
    returnBodyOnCreate: true
    returnBodyOnUpdate: true
  datasource:
    hikari:
      leakDetectionThreshold: 5000
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      maximumPoolSize: 16
    platform: h2
    url: jdbc:h2:./target/mod-workflow;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driverClassName: org.h2.Driver
    # platform: postgres
    # driverClassName: org.postgresql.Driver
    # url: jdbc:postgresql://localhost:5432/mod_workflow

    username: folio_admin
    password: folio_admin

  h2:
    console:
      enabled: true
      path: /h2console
      settings:
        web-allow-others: true

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    # database-platform: org.hibernate.dialect.PostgreSQLDialect

    properties.hibernate.jdbc.lob.non_contextual_creation: true
    generate-ddl: false
    hibernate.ddl-auto: none
    open-in-view: true
    show-sql: false
  profiles:
    active: default, messaging
  thymeleaf:
    mode: TEXT
    suffix: .sql

event.queue.name: event.queue

tenant:
  header-name: X-Okapi-Tenant
  force-tenant: false
  default-tenant: diku
  initialize-default-tenant: true
  domain-packages:
    - org.folio.rest.workflow.components
    - org.folio.rest.workflow.model
  schema-scripts:

okapi:
  url: http://localhost:9000
  camunda:
    base-path: /mod-camunda
    rest-path: /mod-camunda/rest

info:
  build:
    artifact: "@project.artifactId@"
    name: "@project.name@"
    description: "@project.description@"
    version: "@project.version@"
