logging:
  file:
    path: logs
    name: ${logging.file.path}/mod-workflow.log
  level:
    com:
      zaxxer:
        hikari: INFO
    org:
      folio: INFO
      hibernate: INFO
      springframework: INFO

server:
  port: 8081
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true

spring:
  application.name: mod-workflow
  liquibase.changeLog: classpath:/changelog/changelog-master.xml

  data.rest:
    returnBodyOnCreate: true
    returnBodyOnUpdate: true

  kafka:
    admin:
      auto-create: true
    bootstrap-servers: ${KAFKA_HOST:localhost}:${KAFKA_PORT:9092}

  main:
    allow-bean-definition-overriding: false
    allow-circular-references: false
    banner-mode: console
    log-startup-info: true

  sql:
    init:
      #platform: h2
      platform: postgres

      #continue-on-error: false

  datasource:
    hikari:
      leakDetectionThreshold: 180000
      connectionTimeout: 30000
      idleTimeout: 600000
      maxLifetime: 1800000
      maximumPoolSize: ${DB_MAXPOOLSIZE:16}
    #driverClassName: org.h2.Driver
    #url: jdbc:h2:./target/mod-workflow;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL;DATABASE_TO_LOWER=true;DEFAULT_NULL_ORDERING=HIGH
    #url: jdbc:h2:mem:AZ;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL;DATABASE_TO_LOWER=true;DEFAULT_NULL_ORDERING=HIGH
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:mod_workflow}

    username: ${DB_USERNAME:folio_admin}
    password: ${DB_PASSWORD:folio_admin}

  flyway:
    enabled: false
    encoding: UTF-8

  h2:
    console:
      enabled: false
      path: /h2console
      settings:
        web-allow-others: true

  jpa:
    #database-platform: org.hibernate.dialect.H2Dialect
    database-platform: org.hibernate.dialect.PostgreSQLDialect

    properties.hibernate.jdbc.lob.non_contextual_creation: true
    generate-ddl: false
    hibernate.ddl-auto: update
    #hibernate.hbm2ddl.auto: none
    open-in-view: true
    show-sql: false

  profiles:
    active: default, messaging

  thymeleaf:
    mode: TEXT
    suffix: .sql

springdoc:
  api-docs:
    enabled: true
    path: /api-docs
  show-actuator: true
  swagger-ui:
    enabled: true
    path: /swagger-ui
  writer-with-default-pretty-printer: true

application:
  kafka:
    producer:
      events:
        topic: ${ENV:folio}.workflow.events

# use to store uploads shared over kafka
event:
  uploads:
    path: events

folio:
  tenant.validation: false

tenant:
  header-name: X-Okapi-Tenant
  force-tenant: false
  default-tenant: diku

  # When this and initialize-default-tenant are true, then if the database already exists, then it will be dropped and re-initialized.
  recreate-default-tenant: false
  initialize-default-tenant: true

  domain-packages:
    - org.folio.rest.workflow.components
    - org.folio.rest.workflow.model
  schema-scripts:

okapi:
  url: ${OKAPI_URL:http://localhost:9130}

# https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html
management:
  endpoints:
    enabled-by-default: false
    web:
      base-path: /admin
      exposure:
        include: flyway,health,info
  endpoint:
    flyway:
      enabled: true
    health:
      enabled: true
      show-details: always
      show-components: always
    info:
      enabled: true
  health:
    defaults:
      enabled: true
    readinessstate:
      enabled: true
  info:
    env.enabled: true
    java.enabled: true
    os.enabled: true

info:
  build:
    artifact: "@project.artifactId@"
    name: "@project.name@"
    description: "@project.description@"
    version: "@project.version@"
